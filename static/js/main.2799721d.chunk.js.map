{"version":3,"sources":["components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css"],"names":["ContactForm","state","name","number","handleChange","e","target","value","setState","handleSubmit","preventDefault","props","onAddContact","className","styles","TaskEditor","onSubmit","this","TaskEditor_label","TaskEditor_input","type","onChange","TaskEditor_button","Component","ContactList","contacts","onRemoveContact","TaskList","map","contact","TaskList_item","TaskList_button","onClick","id","Filter","onChangeFilter","uuidv4","App","filter","addContact","task","cont","includes","alert","length","prevState","changeFilter","getVisibleContacts","toLowerCase","removeContact","contactId","prevProps","localStorage","setItem","JSON","stringify","getItem","parsedContacts","parse","visibleContacts","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.2799721d.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./ContactForm.module.css\";\r\n\r\nexport default class ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.props.onAddContact({ ...this.state });\r\n\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n  render() {\r\n    return (\r\n      <form className={styles.TaskEditor} onSubmit={this.handleSubmit}>\r\n        <label className={styles.TaskEditor_label}>\r\n          Name\r\n          <input\r\n            className={styles.TaskEditor_input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <label className={styles.TaskEditor_label}>\r\n          Number\r\n          <input\r\n            className={styles.TaskEditor_input}\r\n            type=\"text\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <button className={styles.TaskEditor_button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onAddContact: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./ContactList.module.css\";\r\n\r\nconst ContactList = ({ contacts, onRemoveContact }) => (\r\n  <ul className={styles.TaskList}>\r\n    {contacts.map((contact) => (\r\n      <li className = {styles.TaskList_item}key={contact.id}>\r\n        {contact.name + \":\" + contact.number}\r\n        {\r\n          <button\r\n            className={styles.TaskList_button}\r\n            type=\"button\"\r\n            name=\"delte\"\r\n            onClick={() => onRemoveContact(contact.id)}\r\n          >\r\n            delete\r\n          </button>\r\n        }\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactList.propTypes = {\r\n  onRemoveContact: PropTypes.func.isRequired,\r\n  contacts: PropTypes.arrayOf(PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n  })),\r\n}\r\nexport default ContactList;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function Filter({ value, onChangeFilter }) {\r\n  return (\r\n    <div>\r\n      Find contacts by name\r\n      <input\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={(e) => onChangeFilter(e.target.value)}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onchangeFilter: PropTypes.func.isRequired,\r\n};","import React, { Component } from 'react';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\nimport { v4 as uuidv4 } from 'uuid';\nuuidv4();\n\nclass App extends Component {\n  state = {\n    filter: '',\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n  };\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  addContact = (task) => {\n    const searchSameName = this.state.contacts\n      .map((cont) => cont.name)\n      .includes(task.name);\n\n    if (searchSameName) {\n      alert(`${task.name} is already in contacts`);\n    } else if (task.name.length === 0) {\n      alert(\"Fields must be filled!\");\n    } else {\n      const contact = {\n        ...task,\n        id: uuidv4(),\n      };\n\n      this.setState((prevState) => ({\n        contacts: [...prevState.contacts, contact],\n      }));\n    }\n  };\n\n  changeFilter = (filter) => {\n    this.setState({ filter });\n  };\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n\n    return contacts.filter((contacts) =>\n      contacts.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  removeContact = (contactId) => {\n    this.setState((prevState) => {\n      return {\n        contacts: prevState.contacts.filter(({ id }) => id !== contactId),\n      };\n    });\n  };\n\n  render() {\n    const { filter } = this.state;\n\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <div>\n        <h1>Phonebook</h1>\n\n        <ContactForm onAddContact={this.addContact} />\n        <h2>Contacts</h2>\n        {visibleContacts.length > 1 && (\n          <Filter value={filter} onChangeFilter={this.changeFilter} />\n        )}\n        {visibleContacts.length > 0 && (\n          <ContactList\n            contacts={visibleContacts}\n            onRemoveContact={this.removeContact}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2PCSt\",\"TaskEditor\":\"ContactForm_TaskEditor__2Fr5y\",\"TaskEditor_label\":\"ContactForm_TaskEditor_label__2Gzot\",\"TaskEditor_input\":\"ContactForm_TaskEditor_input__lSr_s\",\"TaskEditorinput\":\"ContactForm_TaskEditorinput__veT_B\",\"TaskEditor_button\":\"ContactForm_TaskEditor_button__WhK_U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TaskList\":\"ContactList_TaskList__aAoWh\",\"TaskList_item\":\"ContactList_TaskList_item__1ZROw\",\"completed\":\"ContactList_completed__24e_U\",\"TaskList_text\":\"ContactList_TaskList_text__xfz67\",\"TaskList_actions\":\"ContactList_TaskList_actions__2_Ilp\",\"TaskList_button\":\"ContactList_TaskList_button__mlQAa\"};"],"sourceRoot":""}